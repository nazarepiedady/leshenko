(()=>{"use strict";var t;!function(t){t[t.Home=0]="Home",t[t.NextCommit=1]="NextCommit",t[t.PrevCommit=2]="PrevCommit",t[t.SeekCommit=3]="SeekCommit",t[t.ChangeHash=4]="ChangeHash",t[t.OpenFile=5]="OpenFile",t[t.CloseFile=6]="CloseFile",t[t.LoadComments=7]="LoadComments",t[t.PostComment=8]="PostComment"}(t||(t={}));const e=document.getElementById("loading"),i=document.querySelector("section.message"),n=i.querySelector(".title"),o=i.querySelector(".message"),s=i.querySelector(".comments"),a=s.querySelector(".count"),m=s.querySelector(".content"),l=s.querySelector("form"),c=l.elements.namedItem("comment"),d=l.elements.namedItem("name"),r=l.elements.namedItem("email"),h=l.querySelector("button"),u=l.querySelector(".ok"),C=document.querySelector("section.diff"),p=document.querySelector(".diff-content"),y=document.querySelector(".clone-details"),f=document.getElementById("clone-cmd"),g=document.getElementById("checkout-cmd"),v=document.querySelector("section.file"),w=document.querySelector(".file .name"),x=document.querySelector(".file-content"),I=document.querySelector(".file-close"),b=document.getElementById("home-btn"),E=document.getElementById("prev-btn"),L=document.getElementById("next-btn"),k=document.getElementById("progress-bar"),S=k.querySelector(".fill"),q=k.querySelector(".dots");function j(t){const e=t.target.dataset.copyFrom;if(!e)return;const i=document.getElementById(e);i&&i.textContent&&(navigator.clipboard.writeText(i.textContent),i.classList.add("cmd-flash"),setTimeout((()=>{i.classList.remove("cmd-flash")}),400))}function P([t,{hunks:e}]){return`<details open data-diff-file="${t}"><summary>${t}</summary> ${e.map((t=>`<p class="hunk">${t.title}</p> ${t.diff}`)).join("")}</details>`}function F(t){a.textContent=null==t?"":`(${t})`}function $(){var t;(null!==(t=m.querySelector(".comment"))&&void 0!==t?t:s).scrollIntoView({block:"nearest",behavior:"smooth"})}document.querySelectorAll(".copy").forEach((t=>{t.addEventListener("click",j)}));const B=new class{constructor(t){this.dataPath=t,this.commits=[],this.objects={},this._totalCommits=0,this.chunks=[],this.commitIdToIndex={}}async loadIndex(){const t=await fetch(this.dataPath+"index.json"),e=await t.json();this._totalCommits=e.total_commits,this.chunks=Object.entries(e.chunks).map((([t,e])=>[parseInt(t),e])).sort(),this.commitIdToIndex=e.commit_id_to_index}get totalCommits(){return this._totalCommits}async getCommitByIndex(t){return t>=this.commits.length&&await this.preloadUntilIndex(t),this.preloadUntilIndex(t+3),this.commits[t]}getObject(t){return this.objects[t]}getCommitIndexFromId(t){var e;return null!==(e=this.commitIdToIndex[t])&&void 0!==e?e:0}async preloadUntilIndex(t){this.currentPreload&&await this.currentPreload;const e=this.commits,i=this.chunks.filter((([i])=>e.length-1<i&&i<=t)).map((([,t])=>t));this.currentPreload=Promise.all(i.map((t=>fetch(this.dataPath+t).then((t=>t.json())))));const n=await this.currentPreload;this.currentPreload=void 0,e.push(...n.map((t=>t.commits)).flat());for(const{objects:t}of n)Object.assign(this.objects,t)}}("commits/"),H=new class{constructor(t){this.endpoint=t}async getCommentCount(t){let{count:e}=await fetch(`${this.endpoint}/count/${t}.json`,{credentials:"include"}).then((t=>t.json()));return e}async getComments(t){return await fetch(`${this.endpoint}/${t}.json`,{credentials:"include"}).then((t=>t.json()))}async postComment(t,e,i,n){let o={author:e,email:i,body:n};try{return!!(await fetch(`${this.endpoint}/${t}.json`,{method:"POST",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}).then((t=>t.json()))).success}catch{return!1}}}("//ugit-api.leshenko.net/comments"),T=new class{constructor(){this.sendEvent=()=>{},this.requestedLoadComments=!0,b.addEventListener("click",(()=>this.sendEvent({type:t.Home}))),E.addEventListener("click",(()=>this.sendEvent({type:t.PrevCommit}))),L.addEventListener("click",(()=>this.sendEvent({type:t.NextCommit}))),I.addEventListener("click",(()=>this.sendEvent({type:t.CloseFile}))),document.addEventListener("keydown",(e=>{if(!e.target||!["input","textarea"].includes(e.target.tagName.toLowerCase()))switch(e.key){case"ArrowLeft":this.sendEvent({type:t.PrevCommit});break;case"ArrowRight":this.sendEvent({type:t.NextCommit})}})),window.addEventListener("hashchange",(()=>{this.sendEvent({type:t.ChangeHash,commitId:window.location.hash.substr(1)})})),p.addEventListener("click",(e=>{let i=e.target;for(;i&&i!=p&&!i.dataset.line;)i=i.parentElement;if(!i||i==p)return;if(!i.dataset.line)return;const n=parseInt(i.dataset.line);for(;i&&i!=p&&!i.dataset.diffFile;)i=i.parentElement;if(!i||!i.dataset.diffFile)throw"diff-file not found";const o=i.dataset.diffFile;this.sendEvent({type:t.OpenFile,file:o,line:n})})),k.addEventListener("click",(e=>{if(null==this.totalCommits)return;const i=q.getBoundingClientRect(),n=(e.clientX-i.x)/i.width,o=Math.round(n*(this.totalCommits-1));this.sendEvent({type:t.SeekCommit,commit:o})})),s.addEventListener("toggle",(()=>{s.open&&$(),s.open&&!this.requestedLoadComments&&(this.requestedLoadComments=!0,this.sendEvent({type:t.LoadComments}))})),l.addEventListener("submit",(e=>{e.preventDefault(),h.disabled=!0,u.style.display="none",this.sendEvent({type:t.PostComment,body:c.value,name:d.value,email:r.value})}))}reportError(t){alert(t)}loadCommit(t,e,a){this.setLoading(!1),this.closeFile(),function(t){n.textContent=t.title,o.innerHTML=t.message}(t),F(),m.textContent="Loading...",l.style.display="none",function(t){const e=Object.entries(t.diff).sort().map(P).join("");p.innerHTML=e+function(t){const e=Object.keys(t.tree).sort().map((e=>[e,e in t.diff]));return`<details><summary>All Files (${e.length})</summary><ul class="file-list">`+e.map((([t,e])=>`<li data-diff-file="${t}" data-line="1" ${e?'class="changed"':""}>${t}</li>`)).join("")+"</ul></details>"}(t)}(t),function(t){f.textContent=`git clone ${location.origin+location.pathname}repo/ ugit`,g.textContent=`git checkout ${t.oid.substring(0,12)}`}(t),this.renderProgress(e,a),window.location.hash=0==e?"":t.id,i.scroll(0,0),C.scroll(0,0),y.open=!1,s.open=!1,h.disabled=!1,this.totalCommits=a,this.requestedLoadComments=!1}openFile(t,e,i,n){v.style.display="",function(t,e,i){if(w.textContent=e,x.innerHTML=i+'<div class="overscroll"/>',!(e in t.diff))return;const n=t.diff[e].changed_lines;for(const t of x.querySelectorAll(".line"))t.dataset.line&&n.includes(parseInt(t.dataset.line))&&t.classList.add("d-a")}(t,e,i);const o=x.querySelector(`.line[data-line="${n}"]`);if(o){o.scrollIntoView();const t=x.getBoundingClientRect(),e=t.y+t.height/2,i=o.getBoundingClientRect(),n=i.y+i.height/2;x.scrollTop+=n-e}else x.scroll(0,0)}closeFile(){v.style.display="none"}setLoading(t){e.style.display=t?"":"none",t||document.body.classList.remove("loading")}setCommentsCount(t){F(t)}loadComments(t){!function(t){l.style.display="",u.style.display="none",m.textContent=0==t.length?"No Comments Yet":"";for(let e of t){let t=document.createElement("div");t.classList.add("comment");let i=document.createElement("span");i.classList.add("diminished"),i.textContent="(Comment #"+e.id+") ";let n=document.createElement("bdi");n.classList.add("author"),n.textContent=e.author;let o=document.createElement("span");o.classList.add("diminished"),o.textContent=" @ "+new Date(e.date).toLocaleString()+":";let s=document.createElement("p");s.innerText=e.body,t.appendChild(i),t.appendChild(n),t.appendChild(o),t.appendChild(s),m.appendChild(t)}}(t),$()}notifyCommentSubmitted(t){h.disabled=!1,t?(u.style.display="",u.scrollIntoView({block:"nearest",behavior:"smooth"}),c.value=""):alert("Sorry, failed to submit comment")}renderProgress(t,e){if(null==this.totalCommits||e!=this.totalCommits){const t='<span class="dot"></span>'.repeat(e);q.innerHTML=t}null!=this.commitIndex&&q.children[this.commitIndex].classList.remove("active"),q.children[t].classList.add("active"),this.commitIndex=t;let i=1;if(t<e-1){const e=q.children[t].getBoundingClientRect().right+4,n=k.getBoundingClientRect();i=(e-n.left)/n.width}S.style.width=100*i+"%"}},O=new class{constructor(t,e,i){this.view=t,this.repo=e,this.comments=i,this.commitIndex=0,this.loading=!0,this.navigationCount=0,this.view.sendEvent=this.on.bind(this)}async start(t){try{await this.repo.loadIndex()}catch{return void this.view.reportError("Critical: Loading failed, please refresh the page")}await this.loadCommit(this.repo.getCommitIndexFromId(t))}async on(e){if(!this.loading)switch(e.type){case t.Home:case t.NextCommit:case t.PrevCommit:case t.SeekCommit:case t.ChangeHash:await this.onNavigationEvent(e);break;case t.OpenFile:if(this.commit){let t=this.repo.getObject(this.commit.tree[e.file]);this.view.openFile(this.commit,e.file,t,e.line)}break;case t.CloseFile:this.view.closeFile();break;case t.LoadComments:if(this.commit){let t=this.navigationCount,e=await this.comments.getComments(this.commit.id);if(t!=this.navigationCount)return;this.view.loadComments(e)}break;case t.PostComment:if(this.commit){let t=this.navigationCount,i=await this.comments.postComment(this.commit.id,e.name,e.email,e.body);if(t!=this.navigationCount)return;this.view.notifyCommentSubmitted(i)}}}async onNavigationEvent(e){let i=0;switch(e.type){case t.Home:i=0;break;case t.NextCommit:this.commitIndex<this.repo.totalCommits-1&&(i=this.commitIndex+1);break;case t.PrevCommit:this.commitIndex>0&&(i=this.commitIndex-1);break;case t.SeekCommit:e.commit>=0&&e.commit<this.repo.totalCommits&&(i=e.commit);break;case t.ChangeHash:i=this.repo.getCommitIndexFromId(e.commitId)}i!=this.commitIndex&&this.loadCommit(i)}async loadCommit(t){this.loading=!0,this.navigationCount++,this.view.setLoading(!0),this.commitIndex=t;try{this.commit=await this.repo.getCommitByIndex(t)}catch{return void this.view.reportError("Critical: Loading failed, please refresh the page")}this.view.loadCommit(this.commit,t,this.repo.totalCommits),this.loading=!1;let e=this.navigationCount,i=await this.comments.getCommentCount(this.commit.id);e==this.navigationCount&&this.view.setCommentsCount(i)}}(T,B,H);O.start(window.location.hash.substr(1))})();