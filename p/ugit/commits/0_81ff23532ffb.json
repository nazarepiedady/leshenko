{"commits": [{"oid": "73ae1cd1a42c64677ad5dc5096cf833e8dc729b7", "id": "welcome", "title": "ugit: DIY Git in Python", "message": "<p>Welcome aboard! We're going to implement Git in Python to learn more about how Git works on the inside.</p>\n<p>This tutorial is different from most Git internals tutorials because we're not going to talk about Git only with words but also with code! We're going to write in Python as we go.</p>\n<p><strong>This is not a tutorial on using Git!</strong> To follow along I advise that you have working knowledge of Git. If you're a newcomer to Git, this tutorial is probably not the best place to start your Git journey. I suggest coming back here after you've used Git a bit and you're comfortable with making commits, branching, merging, pushing and pulling.</p>\n<h2>Why learn Git internals?</h2>\n<p>For most tools that we use daily, we don't really care about their internals. We can use Firefox or Vim without understanding their inner workings.</p>\n<p>At first you shouldn't care about Git internals either. You can use Git as a set of CLI commands that track code history. Run <code>git add</code>, <code>git commit</code> and <code>git push</code> all day long and you'll do fine, as long as you're a sole developer who just commits to one branch.</p>\n<p>But once you start collaborating with multiple people on multiple branches and things like <em>rebase</em> or <em>force push</em> are getting involved, it's easy to become lost if you don't have a good mental model of Git internals.</p>\n<p>From my experience with using Git myself and teaching others, a better way to improve your effectiveness with Git is by understanding how it works behind the scenes and not by learning more \"advanced\" Git commands. This understanding is what will allow you to solve the kind of problems that multi-user collaborative coding sometimes produce.</p>\n<h2>Introducing: \u03bcgit</h2>\n<p><strong>\u03bcgit</strong> (ugit) is a small implementation of a Git-like version control system (VCS). It's top goal is simplicity and educational value. ugit is implemented in small incremental steps, with each step explained in detail. Hopefully you will be able to read the small steps (explanation and code) and slowly build a complete picture of the internals.</p>\n<p>ugit is not exactly Git, but it shares the important ideas of Git. ugit is way shorter and doesn't implement irrelevant features. For example, to reduce the complexity of ugit, ugit doesn't compress objects, doesn't save the mode of the files or doesn't save the time of a commit. But the important ideas, like commits, branches, the index, merges and remotes are all present and are very similar to Git. If you know ugit well you will be able to recognize the same ideas in Git.</p>\n<p>This tutorial organized as a series of code changes, each change contains an explanation and the diff of the change. For example, you're now reading the first change, and you can see the code that we've added in this change as a diff on the other side. The code is an empty Python application that prints \"hello world\".</p>\n<p>In more detail, we created a <em>setup.py</em> file that describes the ugit executable. The executable calls the <code>main()</code> function in <em>cli.py</em> once invoked.</p>\n<p>I also recommend to download the source (or type it yourself) in order to follow along and try the ideas in practice. The source for ugit is hosted in a Git repository and the command to download it can be found in the other window. If you want to run the code, I recommend installing ugit in development mode. Run the following command in the root directory of the project:</p>\n<pre><code>$ python3 setup.py develop --user</code></pre>\n<p>Installing in development mode creates a link to our source code instead of copying it to the installation directory, so we can still edit the source and run it immediately.</p>\n<p>Now we can run <code>ugit</code> and see \"Hello, World!\" printed out.</p>\n<p>To go to the next change, please press the \"Next\" button or use the right arrow key.</p>\n<h2>Why learn Git using code?</h2>\n<p>As I mentioned earlier, in this tutorial we will actually implement Git in Python. I believe that for programmers, seeing the concepts implemented in code crystallizes understanding. It's cool to see Git explained in a diagram, but when you see the same concepts in live code that you can fully understand and actually run, a deeper understanding can be achieved. That's because if the code works no details can be omitted from it, unlike an explanation with words.</p>\n<h2>Why not learn Git by reading the real Git code?</h2>\n<p>The real Git code is too complicated to be useful for learning basic concepts with ease. It is production quality code that is optimized for speed. It is written in C. It implements so many advanced Git features. It deals with a lot of edge cases that we don't care about for learning. In this tutorial we will focus on the bare minimum to get the point across.</p>\n<h2>About Me</h2>\n<p>Hi, I'm Nikita and this is a tutorial I've been working on for a long time. If you have any questions or suggestions, please leave a comment on any of the relevant sections.</p>\n", "diff": {".gitignore": {"changed_lines": [1, 2], "hunks": [{"title": "@@ -0,0 +1,2 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line d-a\" data-line=\"1\"><span class=\"d-s\">+ </span>__pycache__\n</span><span class=\"line d-a\" data-line=\"2\"><span class=\"d-s\">+ </span>*.egg-info/\n</span></code></pre></div>\n"}]}, "setup.py": {"changed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "hunks": [{"title": "@@ -0,0 +1,12 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line d-a\" data-line=\"1\"><span class=\"d-s\">+ </span><span class=\"ch\">#!/usr/bin/env python3</span>\n</span><span class=\"line d-a\" data-line=\"2\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"3\"><span class=\"d-s\">+ </span><span class=\"kn\">from</span> <span class=\"nn\">setuptools</span> <span class=\"kn\">import</span> <span class=\"n\">setup</span>\n</span><span class=\"line d-a\" data-line=\"4\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"5\"><span class=\"d-s\">+ </span><span class=\"n\">setup</span> <span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ugit&#39;</span><span class=\"p\">,</span>\n</span><span class=\"line d-a\" data-line=\"6\"><span class=\"d-s\">+ </span>       <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1.0&#39;</span><span class=\"p\">,</span>\n</span><span class=\"line d-a\" data-line=\"7\"><span class=\"d-s\">+ </span>       <span class=\"n\">packages</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ugit&#39;</span><span class=\"p\">],</span>\n</span><span class=\"line d-a\" data-line=\"8\"><span class=\"d-s\">+ </span>       <span class=\"n\">entry_points</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n</span><span class=\"line d-a\" data-line=\"9\"><span class=\"d-s\">+ </span>           <span class=\"s1\">&#39;console_scripts&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span>\n</span><span class=\"line d-a\" data-line=\"10\"><span class=\"d-s\">+ </span>               <span class=\"s1\">&#39;ugit = ugit.cli:main&#39;</span>\n</span><span class=\"line d-a\" data-line=\"11\"><span class=\"d-s\">+ </span>           <span class=\"p\">]</span>\n</span><span class=\"line d-a\" data-line=\"12\"><span class=\"d-s\">+ </span>       <span class=\"p\">})</span>\n</span></code></pre></div>\n"}]}, "ugit/cli.py": {"changed_lines": [1, 2], "hunks": [{"title": "@@ -0,0 +1,2 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line d-a\" data-line=\"1\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line d-a\" data-line=\"2\"><span class=\"d-s\">+ </span>    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">&#39;Hello, World!&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/cli.py": "846b5a8ed5406c57aa71fb94f372cbc14e5efc11"}}, {"oid": "47128b5cc969d02410ad86d41cf4725d4f6a9b34", "id": "cli-argparse", "title": "cli: Add argument parser", "message": "<p>The real Git executable has multiple sub-commands, like <code>git init</code>, <code>git commit</code>, etc. Let's use Python's built-in argument parser <em>argparse</em> to implement sub-commands.</p>\n<p>You can see on the other side which changes were made. Now we can run <code>ugit init</code> and see \"Hello, World!\" printed out.</p>\n", "diff": {"ugit/cli.py": {"changed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "hunks": [{"title": "@@ -1,2 +1,22 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line d-a\" data-line=\"1\"><span class=\"d-s\">+ </span><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line d-a\" data-line=\"2\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"3\"><span class=\"d-s\">+ </span>\n</span><span class=\"line\" data-line=\"4\"><span class=\"d-s\">  </span><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line d-a\" data-line=\"5\"><span class=\"d-s\">+ </span>    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"6\"><span class=\"d-s\">+ </span>    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"7\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"8\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"9\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">parse_args</span> <span class=\"p\">():</span>\n</span><span class=\"line d-a\" data-line=\"10\"><span class=\"d-s\">+ </span>    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"11\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"12\"><span class=\"d-s\">+ </span>    <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_subparsers</span> <span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s1\">&#39;command&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"13\"><span class=\"d-s\">+ </span>    <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</span><span class=\"line d-a\" data-line=\"14\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"15\"><span class=\"d-s\">+ </span>    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"16\"><span class=\"d-s\">+ </span>    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"17\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"18\"><span class=\"d-s\">+ </span>    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"19\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"20\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"21\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"22\"><span class=\"d-s\">  </span>    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">&#39;Hello, World!&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/cli.py": "8485dba432aea9f26b0c862696a545c316fd8dfe"}}, {"oid": "05f12368ee6b6b21f2ad56f3fed6606fce55a50e", "id": "init-create-ugit-dir", "title": "init: Create new .ugit directory", "message": "<p>The <code>ugit init</code> command creates a new empty repository.</p>\n<p>Git stores all repository data locally, in a subdirectory called \".git\", so upon initialization we'll create one.</p>\n<p>I named the directory \".ugit\" rather than \".git\" so that it doen't clash with Git, but the idea is the same.</p>\n<p>To implement <code>init</code>, we could have just called <code>os.makedirs</code> from <em>cli.py</em>, but I want to have some separation between different logical parts of the code:</p>\n<ul>\n<li><em>cli.py</em> - In charge of parsing and processing user input.</li>\n<li><em>data.py</em> - Manages the data in <em>.ugit</em> directory. Here will be the code that actually touches files on disk.</li>\n</ul>\n<p>This separation will be useful as the code will get larger.</p>\n", "diff": {"ugit/cli.py": {"changed_lines": [2, 3, 4, 25, 26], "hunks": [{"title": "@@ -1,4 +1,7 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"d-s\">  </span><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line d-a\" data-line=\"2\"><span class=\"d-s\">+ </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line d-a\" data-line=\"3\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"4\"><span class=\"d-s\">+ </span><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"5\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"6\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"7\"><span class=\"d-s\">  </span><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span></code></pre></div>\n"}, {"title": "@@ -19,4 +22,5 @@ def parse_args ():", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"22\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"23\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"24\"><span class=\"d-s\">  </span><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line d-r\" data-line=\"25\"><span class=\"d-s\">- </span>    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">&#39;Hello, World!&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"25\"><span class=\"d-s\">+ </span>    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">init</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"26\"><span class=\"d-s\">+ </span>    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Initialized empty ugit repository in </span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n"}]}, "ugit/data.py": {"changed_lines": [1, 2, 3, 4, 5, 6, 7, 8], "hunks": [{"title": "@@ -0,0 +1,8 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line d-a\" data-line=\"1\"><span class=\"d-s\">+ </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line d-a\" data-line=\"2\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"3\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"4\"><span class=\"d-s\">+ </span><span class=\"n\">GIT_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.ugit&#39;</span>\n</span><span class=\"line d-a\" data-line=\"5\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"6\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"7\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">():</span>\n</span><span class=\"line d-a\" data-line=\"8\"><span class=\"d-s\">+ </span>    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"n\">GIT_DIR</span><span class=\"p\">)</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/cli.py": "cd9386f826a217ca8689a8477503bd7e0f1f6891", "ugit/data.py": "7bfde557a6cbe6ea76a38e03e311a1b85aefdf0b"}}, {"oid": "be18e552b156f2324adc02f786f3011298586a53", "id": "hash-object", "title": "hash-object: Save object", "message": "<p>Let's create the first non-trivial command. This command will take a file and store it in our <em>.ugit</em> directory for later retrieval. In Git's lingo, this feature is called <strong>\"the object database\"</strong>. It allows us to store and retrieve arbitrary blobs, which are called <strong>\"objects\"</strong>. As far as the Object Database is concerned, the content of the object doesn't have any meaning (just like a filesystem doesn't care about the internal structure of a file).</p>\n<p>Because this command needs the <em>.ugit</em> directory, it must be run from the same directory where you did <code>ugit init</code>.</p>\n<p>Note that this is a very low-level Git building block and we're not talking yet about versions or commits or any other things that you might have heard about, we're just talking about an interface for storing some raw bytes.</p>\n<p>So we can store an object, but how would we refer to it later? We could ask the user to provide a name along with the object and retrieve the object later using the name, but there is a nicer way: We can refer to the object using its <strong>hash</strong>.</p>\n<p>If you haven't heard about hashes and hash functions, I suggest that you pause and do some reading on it. In summary, a hash function can take a blob of arbitrary length and produce a small \"fingerprint\" with a fixed length. Some hash functions such as <strong>SHA-1</strong> guarantee that different blobs are very very very likely to produce different fingerprints (so likely, that Git assumes it's guaranteed). Let's try some strings to see an example:</p>\n<pre><code>$ echo -n this is cool | sha1sum\n60f51187e76a9de0ff3df31f051bde04da2da891\n$ echo -n this is cooler | sha1sum\nf3c953b792f9ab39d1be0bdab7ab5f8350593004</code></pre>\n<p>You can see that hashing the phrases \"this is cool\" and \"this is cooler\" gives completely different hashes even though the difference between the phrases is small.</p>\n<p>We're going to use the hash as the name of object (we'll call this name an <strong>\"OID\"</strong>* - object ID).</p>\n<p>So the flow of the command <code>hash-object</code> is:</p>\n<ul>\n<li>Get the path of the file to store.</li>\n<li>Read the file.</li>\n<li>Hash the content of the file using SHA-1.</li>\n<li>Store the file under <em>\".ugit/objects/{the SHA-1 hash}\"</em>.</li>\n</ul>\n<p>This type of storage is called <strong>content-addressable</strong> storage because the \"address\" that we use to find a blob is based on the content of the blob itself. (In contrast to name-addressable storage, such as a typical filesystem, where you address a particular file by its name, regardless of its content). Content-addressable storage has nice properties when synchronizing data between different computers - if two repositories have an object with the same OID we can be sure that they are the same object. Also since two different objects are practically guaranteed to have different OIDs, we can't have naming clashes between objects.</p>\n<p>When real Git stores objects it does a few extra things, such as writing the size of the object to the file as well, compressing them and dividing the objects into 256 directories. This is done to avoid having directories with huge number of files, which can hurt performance. We're not going to do this in ugit for simplicity.</p>\n", "diff": {"ugit/cli.py": {"changed_lines": [21, 22, 23, 24, 31, 32, 33, 34, 35], "hunks": [{"title": "@@ -18,9 +18,18 @@ def parse_args ():", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"18\"><span class=\"d-s\">  </span>    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"19\"><span class=\"d-s\">  </span>    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"20\"><span class=\"d-s\">  </span>\n</span><span class=\"line d-a\" data-line=\"21\"><span class=\"d-s\">+ </span>    <span class=\"n\">hash_object_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;hash-object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"22\"><span class=\"d-s\">+ </span>    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">hash_object</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"23\"><span class=\"d-s\">+ </span>    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"24\"><span class=\"d-s\">+ </span>\n</span><span class=\"line\" data-line=\"25\"><span class=\"d-s\">  </span>    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"26\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"27\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"28\"><span class=\"d-s\">  </span><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"29\"><span class=\"d-s\">  </span>    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">init</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"30\"><span class=\"d-s\">  </span>    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Initialized empty ugit repository in </span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"31\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"32\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"33\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"34\"><span class=\"d-s\">+ </span>    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line d-a\" data-line=\"35\"><span class=\"d-s\">+ </span>        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()))</span>\n</span></code></pre></div>\n"}]}, "ugit/data.py": {"changed_lines": [1, 10, 11, 12, 13, 14, 15, 16, 17], "hunks": [{"title": "@@ -1,3 +1,4 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line d-a\" data-line=\"1\"><span class=\"d-s\">+ </span><span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"d-s\">  </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\"><span class=\"d-s\">  </span>\n</span></code></pre></div>\n"}, {"title": "@@ -6,3 +7,11 @@ GIT_DIR = '.ugit'", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"7\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"8\"><span class=\"d-s\">  </span><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"9\"><span class=\"d-s\">  </span>    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"n\">GIT_DIR</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"10\"><span class=\"d-s\">+ </span>    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"11\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"12\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"13\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"14\"><span class=\"d-s\">+ </span>    <span class=\"n\">oid</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha1</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"15\"><span class=\"d-s\">+ </span>    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n</span><span class=\"line d-a\" data-line=\"16\"><span class=\"d-s\">+ </span>        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"17\"><span class=\"d-s\">+ </span>    <span class=\"k\">return</span> <span class=\"n\">oid</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/cli.py": "87fb303eab068a6d9aae6fac3558afaaf1a66ed4", "ugit/data.py": "27e32c794f88e4b6fc7e97ea2d8ce7f30076475b"}}, {"oid": "20af3289084e8025af0ce55409df38d929045ff7", "id": "cat-file", "title": "cat-file: Print hashed objects", "message": "<p>This command is the \"opposite\" of <code>hash-object</code>: it can print an object by its OID. Its implementation just reads the file at <em>.ugit/objects/{OID}</em>.</p>\n<p>The names <code>hash-object</code> and <code>cat-file</code> aren't the clearest of names, but they are the names that Git uses so we'll stick to them for consistency.</p>\n<p>We can now try the full cycle:</p>\n<pre><code>$ cd /tmp/new\n$ ugit init\nInitialized empty ugit repository in /tmp/new/.ugit\n$ echo some file &gt; bla\n$ ugit hash-object bla\n0e08b5e8c10abc3e455b75286ba4a1fbd56e18a5\n$ ugit cat-file 0e08b5e8c10abc3e455b75286ba4a1fbd56e18a5\nsome file</code></pre>\n<p>Note that the name of the file (<em>bla</em>) wasn't preserved as part of this process, because, again, the object database is just about storing bytes for later retrieval and it doesn't care which filename the bytes came from.</p>\n", "diff": {"ugit/cli.py": {"changed_lines": [3, 26, 27, 28, 29, 41, 42, 43, 44, 45], "hunks": [{"title": "@@ -1,5 +1,6 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"d-s\">  </span><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"d-s\">  </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line d-a\" data-line=\"3\"><span class=\"d-s\">+ </span><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n</span><span class=\"line\" data-line=\"4\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"5\"><span class=\"d-s\">  </span><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span></code></pre></div>\n"}, {"title": "@@ -22,6 +23,10 @@ def parse_args ():", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"23\"><span class=\"d-s\">  </span>    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">hash_object</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"24\"><span class=\"d-s\">  </span>    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"25\"><span class=\"d-s\">  </span>\n</span><span class=\"line d-a\" data-line=\"26\"><span class=\"d-s\">+ </span>    <span class=\"n\">cat_file_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;cat-file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"27\"><span class=\"d-s\">+ </span>    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">cat_file</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"28\"><span class=\"d-s\">+ </span>    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"29\"><span class=\"d-s\">+ </span>\n</span><span class=\"line\" data-line=\"30\"><span class=\"d-s\">  </span>    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"31\"><span class=\"d-s\">  </span>\n</span></code></pre></div>\n"}, {"title": "@@ -33,3 +38,8 @@ def init (args):", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"38\"><span class=\"d-s\">  </span><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"39\"><span class=\"d-s\">  </span>    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"40\"><span class=\"d-s\">  </span>        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()))</span>\n</span><span class=\"line d-a\" data-line=\"41\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"42\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"43\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">cat_file</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"44\"><span class=\"d-s\">+ </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"45\"><span class=\"d-s\">+ </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">))</span>\n</span></code></pre></div>\n"}]}, "ugit/data.py": {"changed_lines": [18, 19, 20, 21, 22], "hunks": [{"title": "@@ -15,3 +15,8 @@ def hash_object (data):", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"15\"><span class=\"d-s\">  </span>    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"16\"><span class=\"d-s\">  </span>        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"17\"><span class=\"d-s\">  </span>    <span class=\"k\">return</span> <span class=\"n\">oid</span>\n</span><span class=\"line d-a\" data-line=\"18\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"19\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"20\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">get_object</span> <span class=\"p\">(</span><span class=\"n\">oid</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"21\"><span class=\"d-s\">+ </span>    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line d-a\" data-line=\"22\"><span class=\"d-s\">+ </span>        <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/cli.py": "e92ce7c6ad06afa4bf5e639145bb44822f75445b", "ugit/data.py": "ed45819a2ad0d1f97fd5271c5ae9c449949c6d11"}}, {"oid": "9e7eb8472e07d4f979d64fd0eda5fc477a227bd3", "id": "add-object-type", "title": "data: Add types to objects", "message": "<p>As we will soon see, there will be different logical types of objects that are used in different contexts (even though, from the Object Database's point of view, they are just all bytes). In order to lower the chance of using an object in the wrong context we're going to add a type tag for each object.</p>\n<p>The type is just a string that's going to be prepended to the start of the file, followed by a null byte. When reading the file later we'll extract the type and verify that it's indeed the expected type.</p>\n<p>The default type is going to be <code>'blob'</code>, since by default an object is a collection of bytes with no further semantic meaning.</p>\n<p>We can also pass <code>expected=None</code> to <code>get_object()</code> if we don't want to verify the type. This is useful for the <code>cat-file</code> CLI command which is a debug command used for printing all objects.</p>\n", "diff": {"ugit/cli.py": {"changed_lines": [45], "hunks": [{"title": "@@ -42,4 +42,4 @@ def hash_object (args):", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"42\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"43\"><span class=\"d-s\">  </span><span class=\"k\">def</span> <span class=\"nf\">cat_file</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"44\"><span class=\"d-s\">  </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span> <span class=\"p\">()</span>\n</span><span class=\"line d-r\" data-line=\"45\"><span class=\"d-s\">- </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">))</span>\n</span><span class=\"line d-a\" data-line=\"45\"><span class=\"d-s\">+ </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n</span></code></pre></div>\n"}]}, "ugit/data.py": {"changed_lines": [13, 14, 15, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30], "hunks": [{"title": "@@ -10,13 +10,21 @@ def init ():", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"10\"><span class=\"d-s\">  </span>    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"11\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"12\"><span class=\"d-s\">  </span>\n</span><span class=\"line d-r\" data-line=\"13\"><span class=\"d-s\">- </span><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n</span><span class=\"line d-r\" data-line=\"13\"><span class=\"d-s\">- </span>    <span class=\"n\">oid</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha1</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"13\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"s1\">&#39;blob&#39;</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"14\"><span class=\"d-s\">+ </span>    <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">type_</span><span class=\"o\">.</span><span class=\"n\">encode</span> <span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;</span><span class=\"se\">\\x00</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span> <span class=\"n\">data</span>\n</span><span class=\"line d-a\" data-line=\"15\"><span class=\"d-s\">+ </span>    <span class=\"n\">oid</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha1</span> <span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"16\"><span class=\"d-s\">  </span>    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n</span><span class=\"line d-r\" data-line=\"17\"><span class=\"d-s\">- </span>        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"17\"><span class=\"d-s\">+ </span>        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"18\"><span class=\"d-s\">  </span>    <span class=\"k\">return</span> <span class=\"n\">oid</span>\n</span><span class=\"line\" data-line=\"19\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"20\"><span class=\"d-s\">  </span>\n</span><span class=\"line d-r\" data-line=\"21\"><span class=\"d-s\">- </span><span class=\"k\">def</span> <span class=\"nf\">get_object</span> <span class=\"p\">(</span><span class=\"n\">oid</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"21\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">get_object</span> <span class=\"p\">(</span><span class=\"n\">oid</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"s1\">&#39;blob&#39;</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"22\"><span class=\"d-s\">  </span>    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line d-r\" data-line=\"23\"><span class=\"d-s\">- </span>        <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"23\"><span class=\"d-s\">+ </span>        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"24\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"25\"><span class=\"d-s\">+ </span>    <span class=\"n\">type_</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">partition</span> <span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">&#39;</span><span class=\"se\">\\x00</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"26\"><span class=\"d-s\">+ </span>    <span class=\"n\">type_</span> <span class=\"o\">=</span> <span class=\"n\">type_</span><span class=\"o\">.</span><span class=\"n\">decode</span> <span class=\"p\">()</span>\n</span><span class=\"line d-a\" data-line=\"27\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"28\"><span class=\"d-s\">+ </span>    <span class=\"k\">if</span> <span class=\"n\">expected</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n</span><span class=\"line d-a\" data-line=\"29\"><span class=\"d-s\">+ </span>        <span class=\"k\">assert</span> <span class=\"n\">type_</span> <span class=\"o\">==</span> <span class=\"n\">expected</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;Expected </span><span class=\"si\">{</span><span class=\"n\">expected</span><span class=\"si\">}</span><span class=\"s1\">, got </span><span class=\"si\">{</span><span class=\"n\">type_</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span>\n</span><span class=\"line d-a\" data-line=\"30\"><span class=\"d-s\">+ </span>    <span class=\"k\">return</span> <span class=\"n\">content</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/cli.py": "dc7dcf4b53649cb358fdad356302d786fc3a6beb", "ugit/data.py": "6e7bccef42fd7350e4c4c8f1f9ddced4f2b32ef6"}}, {"oid": "4957528cf441259b54ad68b1fe052b4f22ed5773", "id": "add-base-module", "title": "Add base module", "message": "<p>This module will have the basic higher-level logic of ugit. So, for example, it will use the object database implemented in <em>data.py</em> to implement higher-level structures for storing directories.</p>\n", "diff": {"ugit/base.py": {"changed_lines": [1], "hunks": [{"title": "@@ -0,0 +1,1 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line d-a\" data-line=\"1\"><span class=\"d-s\">+ </span><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span></code></pre></div>\n"}]}, "ugit/cli.py": {"changed_lines": [5], "hunks": [{"title": "@@ -2,6 +2,7 @@ import argparse", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"2\"><span class=\"d-s\">  </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\"><span class=\"d-s\">  </span><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n</span><span class=\"line\" data-line=\"4\"><span class=\"d-s\">  </span>\n</span><span class=\"line d-a\" data-line=\"5\"><span class=\"d-s\">+ </span><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">base</span>\n</span><span class=\"line\" data-line=\"6\"><span class=\"d-s\">  </span><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"7\"><span class=\"d-s\">  </span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/base.py": "21b410259eda210a9e9923d06015b321592b134c", "ugit/cli.py": "dd5c8f78e853384455b99491cbac7ceb6d10fd53", "ugit/data.py": "6e7bccef42fd7350e4c4c8f1f9ddced4f2b32ef6"}}, {"oid": "ca1bf6014f9a700b0f4dfc57e5e789a900d82ff5", "id": "write-tree-list-files", "title": "write-tree: List files", "message": "<p>The next command is <code>write-tree</code>. This command will take the current working directory and store it to the object database. If <code>hash-object</code> was for storing an individual file, then <code>write-tree</code> is for storing a whole directory.</p>\n<p>Like <code>hash-object</code>, <code>write-tree</code> is going to give us an OID after it's done and we'll be able to use the OID in order to retrieve the directory at a later time.</p>\n<p>In Git's lingo a \"tree\" means a directory.</p>\n<p>We'll get into the details in later changes, in this change we'll only prepare the code around the feature:</p>\n<ul>\n<li><p>Create a <code>write-tree</code> CLI command</p></li>\n<li><p>Create a <code>write_tree()</code> function in <em>base</em> module. Why in <em>base</em> module and not in <em>data</em> module? Because <code>write_tree()</code> is not going to write to disk directly but use the object database provided by <em>data</em> to store the directory. Hence it belongs to the higher-level <em>base</em> module.</p></li>\n<li><p>Add code to <code>write_tree()</code> to print a directory recursively. For now nothing is written anywhere, but we just coded the boilerplate to recursively scan a directory.</p></li>\n</ul>\n<p>We continue in the next change.</p>\n", "diff": {"ugit/base.py": {"changed_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "hunks": [{"title": "@@ -1,1 +1,16 @@", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line d-a\" data-line=\"1\"><span class=\"d-s\">+ </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line d-a\" data-line=\"2\"><span class=\"d-s\">+ </span>\n</span><span class=\"line\" data-line=\"3\"><span class=\"d-s\">  </span><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line d-a\" data-line=\"4\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"5\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"6\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"7\"><span class=\"d-s\">+ </span>    <span class=\"k\">with</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">scandir</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line d-a\" data-line=\"8\"><span class=\"d-s\">+ </span>        <span class=\"k\">for</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line d-a\" data-line=\"9\"><span class=\"d-s\">+ </span>            <span class=\"n\">full</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">directory</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span>\n</span><span class=\"line d-a\" data-line=\"10\"><span class=\"d-s\">+ </span>            <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_file</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"11\"><span class=\"d-s\">+ </span>                <span class=\"c1\"># TODO write the file to object store</span>\n</span><span class=\"line d-a\" data-line=\"12\"><span class=\"d-s\">+ </span>                <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"13\"><span class=\"d-s\">+ </span>            <span class=\"k\">elif</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_dir</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"14\"><span class=\"d-s\">+ </span>                <span class=\"n\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"15\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"16\"><span class=\"d-s\">+ </span>    <span class=\"c1\"># TODO actually create the tree object</span>\n</span></code></pre></div>\n"}]}, "ugit/cli.py": {"changed_lines": [31, 32, 33, 50, 51, 52, 53], "hunks": [{"title": "@@ -28,6 +28,9 @@ def parse_args ():", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"28\"><span class=\"d-s\">  </span>    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">cat_file</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"29\"><span class=\"d-s\">  </span>    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"30\"><span class=\"d-s\">  </span>\n</span><span class=\"line d-a\" data-line=\"31\"><span class=\"d-s\">+ </span>    <span class=\"n\">write_tree_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;write-tree&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"32\"><span class=\"d-s\">+ </span>    <span class=\"n\">write_tree_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">write_tree</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"33\"><span class=\"d-s\">+ </span>\n</span><span class=\"line\" data-line=\"34\"><span class=\"d-s\">  </span>    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"35\"><span class=\"d-s\">  </span>\n</span></code></pre></div>\n"}, {"title": "@@ -44,3 +47,7 @@ def hash_object (args):", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"47\"><span class=\"d-s\">  </span><span class=\"k\">def</span> <span class=\"nf\">cat_file</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"48\"><span class=\"d-s\">  </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"49\"><span class=\"d-s\">  </span>    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n</span><span class=\"line d-a\" data-line=\"50\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"51\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"52\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"53\"><span class=\"d-s\">+ </span>    <span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">write_tree</span> <span class=\"p\">()</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/base.py": "fe6ced4988e2f06b3b8de39af61085cf1280c5d9", "ugit/cli.py": "d08f2307367bf87ee8d7e76c628d54a61689b86f", "ugit/data.py": "6e7bccef42fd7350e4c4c8f1f9ddced4f2b32ef6"}}, {"oid": "b5a38cfd33620507b258366af0a3e1762bf88eb7", "id": "write-tree-ignore-ugit", "title": "write-tree: Ignore .ugit files", "message": "<p>If we run <code>ugit write-tree</code>, we will see that it also prints the content of the <em>.ugit</em> directory. This directory isn't part of the user's files, so let's ignore it.</p>\n<p>Actually, I created a separate <code>is_ignored()</code> function. This way if we have any other files we want to ignore later we have one place to change.</p>\n", "diff": {"ugit/base.py": {"changed_lines": [10, 11, 12, 20, 21, 22, 23], "hunks": [{"title": "@@ -7,6 +7,9 @@ def write_tree (directory='.'):", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"7\"><span class=\"d-s\">  </span>    <span class=\"k\">with</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">scandir</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"8\"><span class=\"d-s\">  </span>        <span class=\"k\">for</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"9\"><span class=\"d-s\">  </span>            <span class=\"n\">full</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">directory</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span>\n</span><span class=\"line d-a\" data-line=\"10\"><span class=\"d-s\">+ </span>            <span class=\"k\">if</span> <span class=\"n\">is_ignored</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"11\"><span class=\"d-s\">+ </span>                <span class=\"k\">continue</span>\n</span><span class=\"line d-a\" data-line=\"12\"><span class=\"d-s\">+ </span>\n</span><span class=\"line\" data-line=\"13\"><span class=\"d-s\">  </span>            <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_file</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"14\"><span class=\"d-s\">  </span>                <span class=\"c1\"># TODO write the file to object store</span>\n</span><span class=\"line\" data-line=\"15\"><span class=\"d-s\">  </span>                <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span></code></pre></div>\n"}, {"title": "@@ -14,3 +17,7 @@ def write_tree (directory='.'):", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"17\"><span class=\"d-s\">  </span>                <span class=\"n\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"18\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"19\"><span class=\"d-s\">  </span>    <span class=\"c1\"># TODO actually create the tree object</span>\n</span><span class=\"line d-a\" data-line=\"20\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"21\"><span class=\"d-s\">+ </span>\n</span><span class=\"line d-a\" data-line=\"22\"><span class=\"d-s\">+ </span><span class=\"k\">def</span> <span class=\"nf\">is_ignored</span> <span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n</span><span class=\"line d-a\" data-line=\"23\"><span class=\"d-s\">+ </span>    <span class=\"k\">return</span> <span class=\"s1\">&#39;.ugit&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span> <span class=\"p\">(</span><span class=\"s1\">&#39;/&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/base.py": "5a9108c0730948880addcb727983062d4bd3f98b", "ugit/cli.py": "d08f2307367bf87ee8d7e76c628d54a61689b86f", "ugit/data.py": "6e7bccef42fd7350e4c4c8f1f9ddced4f2b32ef6"}}, {"oid": "81ff23532ffb6d3cfeb0a013359b7a60b0d3c39c", "id": "write-tree-hash-files", "title": "write-tree: Hash the files", "message": "<p>Instead of only printing the file name, let's put all files in the object database. For now we'll print their OID and their name.</p>\n<p>Notice that instead of getting one OID to represent a directory we now get a separate OID for each file, which isn't very useful. Plus, note that the names of the files aren't stored in the object database, they are just printed and then the information is discarded.</p>\n<p>So at this stage <code>write-tree</code> isn't useful (it just saves a bunch of files as blobs) but the next change will fix it.</p>\n", "diff": {"ugit/base.py": {"changed_lines": [14, 15], "hunks": [{"title": "@@ -11,8 +11,8 @@ def write_tree (directory='.'):", "diff": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"11\"><span class=\"d-s\">  </span>                <span class=\"k\">continue</span>\n</span><span class=\"line\" data-line=\"12\"><span class=\"d-s\">  </span>\n</span><span class=\"line\" data-line=\"13\"><span class=\"d-s\">  </span>            <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_file</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line d-r\" data-line=\"14\"><span class=\"d-s\">- </span>                <span class=\"c1\"># TODO write the file to object store</span>\n</span><span class=\"line d-r\" data-line=\"14\"><span class=\"d-s\">- </span>                <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line d-a\" data-line=\"14\"><span class=\"d-s\">+ </span>                <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line d-a\" data-line=\"15\"><span class=\"d-s\">+ </span>                    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()),</span> <span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"16\"><span class=\"d-s\">  </span>            <span class=\"k\">elif</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_dir</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"17\"><span class=\"d-s\">  </span>                <span class=\"n\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span></code></pre></div>\n"}]}}, "tree": {".gitignore": "567994ceb193ad3c00ebec195c7a702c2223826e", "setup.py": "9c0db12ec5a6601de28ac37b24136054415e1d96", "ugit/base.py": "25793d229b983c84083d10f2110b8c9a1a751003", "ugit/cli.py": "d08f2307367bf87ee8d7e76c628d54a61689b86f", "ugit/data.py": "6e7bccef42fd7350e4c4c8f1f9ddced4f2b32ef6"}}], "objects": {"567994ceb193ad3c00ebec195c7a702c2223826e": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\">__pycache__\n</span><span class=\"line\" data-line=\"2\">*.egg-info/\n</span></code></pre></div>\n", "9c0db12ec5a6601de28ac37b24136054415e1d96": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"ch\">#!/usr/bin/env python3</span>\n</span><span class=\"line\" data-line=\"2\">\n</span><span class=\"line\" data-line=\"3\"><span class=\"kn\">from</span> <span class=\"nn\">setuptools</span> <span class=\"kn\">import</span> <span class=\"n\">setup</span>\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\"><span class=\"n\">setup</span> <span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ugit&#39;</span><span class=\"p\">,</span>\n</span><span class=\"line\" data-line=\"6\">       <span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;1.0&#39;</span><span class=\"p\">,</span>\n</span><span class=\"line\" data-line=\"7\">       <span class=\"n\">packages</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ugit&#39;</span><span class=\"p\">],</span>\n</span><span class=\"line\" data-line=\"8\">       <span class=\"n\">entry_points</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n</span><span class=\"line\" data-line=\"9\">           <span class=\"s1\">&#39;console_scripts&#39;</span> <span class=\"p\">:</span> <span class=\"p\">[</span>\n</span><span class=\"line\" data-line=\"10\">               <span class=\"s1\">&#39;ugit = ugit.cli:main&#39;</span>\n</span><span class=\"line\" data-line=\"11\">           <span class=\"p\">]</span>\n</span><span class=\"line\" data-line=\"12\">       <span class=\"p\">})</span>\n</span></code></pre></div>\n", "846b5a8ed5406c57aa71fb94f372cbc14e5efc11": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"2\">    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">&#39;Hello, World!&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n", "8485dba432aea9f26b0c862696a545c316fd8dfe": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line\" data-line=\"2\">\n</span><span class=\"line\" data-line=\"3\">\n</span><span class=\"line\" data-line=\"4\"><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"5\">    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"6\">    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"7\">\n</span><span class=\"line\" data-line=\"8\">\n</span><span class=\"line\" data-line=\"9\"><span class=\"k\">def</span> <span class=\"nf\">parse_args</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"10\">    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"11\">\n</span><span class=\"line\" data-line=\"12\">    <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_subparsers</span> <span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s1\">&#39;command&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"13\">    <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</span><span class=\"line\" data-line=\"14\">\n</span><span class=\"line\" data-line=\"15\">    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"16\">    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"17\">\n</span><span class=\"line\" data-line=\"18\">    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"19\">\n</span><span class=\"line\" data-line=\"20\">\n</span><span class=\"line\" data-line=\"21\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"22\">    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"s1\">&#39;Hello, World!&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n", "cd9386f826a217ca8689a8477503bd7e0f1f6891": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\">\n</span><span class=\"line\" data-line=\"4\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"5\">\n</span><span class=\"line\" data-line=\"6\">\n</span><span class=\"line\" data-line=\"7\"><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"8\">    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"9\">    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"10\">\n</span><span class=\"line\" data-line=\"11\">\n</span><span class=\"line\" data-line=\"12\"><span class=\"k\">def</span> <span class=\"nf\">parse_args</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"13\">    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"14\">\n</span><span class=\"line\" data-line=\"15\">    <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_subparsers</span> <span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s1\">&#39;command&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"16\">    <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</span><span class=\"line\" data-line=\"17\">\n</span><span class=\"line\" data-line=\"18\">    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"19\">    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"20\">\n</span><span class=\"line\" data-line=\"21\">    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"22\">\n</span><span class=\"line\" data-line=\"23\">\n</span><span class=\"line\" data-line=\"24\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"25\">    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">init</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"26\">    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Initialized empty ugit repository in </span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n", "7bfde557a6cbe6ea76a38e03e311a1b85aefdf0b": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"2\">\n</span><span class=\"line\" data-line=\"3\">\n</span><span class=\"line\" data-line=\"4\"><span class=\"n\">GIT_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.ugit&#39;</span>\n</span><span class=\"line\" data-line=\"5\">\n</span><span class=\"line\" data-line=\"6\">\n</span><span class=\"line\" data-line=\"7\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"8\">    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"n\">GIT_DIR</span><span class=\"p\">)</span>\n</span></code></pre></div>\n", "87fb303eab068a6d9aae6fac3558afaaf1a66ed4": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\">\n</span><span class=\"line\" data-line=\"4\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"5\">\n</span><span class=\"line\" data-line=\"6\">\n</span><span class=\"line\" data-line=\"7\"><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"8\">    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"9\">    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"10\">\n</span><span class=\"line\" data-line=\"11\">\n</span><span class=\"line\" data-line=\"12\"><span class=\"k\">def</span> <span class=\"nf\">parse_args</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"13\">    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"14\">\n</span><span class=\"line\" data-line=\"15\">    <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_subparsers</span> <span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s1\">&#39;command&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"16\">    <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</span><span class=\"line\" data-line=\"17\">\n</span><span class=\"line\" data-line=\"18\">    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"19\">    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"20\">\n</span><span class=\"line\" data-line=\"21\">    <span class=\"n\">hash_object_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;hash-object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"22\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">hash_object</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"23\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"24\">\n</span><span class=\"line\" data-line=\"25\">    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"26\">\n</span><span class=\"line\" data-line=\"27\">\n</span><span class=\"line\" data-line=\"28\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"29\">    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">init</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"30\">    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Initialized empty ugit repository in </span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"31\">\n</span><span class=\"line\" data-line=\"32\">\n</span><span class=\"line\" data-line=\"33\"><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"34\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"35\">        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()))</span>\n</span></code></pre></div>\n", "27e32c794f88e4b6fc7e97ea2d8ce7f30076475b": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\">\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\"><span class=\"n\">GIT_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.ugit&#39;</span>\n</span><span class=\"line\" data-line=\"6\">\n</span><span class=\"line\" data-line=\"7\">\n</span><span class=\"line\" data-line=\"8\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"9\">    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"n\">GIT_DIR</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"10\">    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"11\">\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\"><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"14\">    <span class=\"n\">oid</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha1</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"15\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"16\">        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"17\">    <span class=\"k\">return</span> <span class=\"n\">oid</span>\n</span></code></pre></div>\n", "e92ce7c6ad06afa4bf5e639145bb44822f75445b": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\"><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"6\">\n</span><span class=\"line\" data-line=\"7\">\n</span><span class=\"line\" data-line=\"8\"><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"9\">    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"10\">    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"11\">\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\"><span class=\"k\">def</span> <span class=\"nf\">parse_args</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"14\">    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"15\">\n</span><span class=\"line\" data-line=\"16\">    <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_subparsers</span> <span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s1\">&#39;command&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"17\">    <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</span><span class=\"line\" data-line=\"18\">\n</span><span class=\"line\" data-line=\"19\">    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"20\">    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"21\">\n</span><span class=\"line\" data-line=\"22\">    <span class=\"n\">hash_object_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;hash-object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"23\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">hash_object</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"24\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"25\">\n</span><span class=\"line\" data-line=\"26\">    <span class=\"n\">cat_file_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;cat-file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"27\">    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">cat_file</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"28\">    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"29\">\n</span><span class=\"line\" data-line=\"30\">    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"31\">\n</span><span class=\"line\" data-line=\"32\">\n</span><span class=\"line\" data-line=\"33\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"34\">    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">init</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"35\">    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Initialized empty ugit repository in </span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"36\">\n</span><span class=\"line\" data-line=\"37\">\n</span><span class=\"line\" data-line=\"38\"><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"39\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"40\">        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()))</span>\n</span><span class=\"line\" data-line=\"41\">\n</span><span class=\"line\" data-line=\"42\">\n</span><span class=\"line\" data-line=\"43\"><span class=\"k\">def</span> <span class=\"nf\">cat_file</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"44\">    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"45\">    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">))</span>\n</span></code></pre></div>\n", "ed45819a2ad0d1f97fd5271c5ae9c449949c6d11": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\">\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\"><span class=\"n\">GIT_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.ugit&#39;</span>\n</span><span class=\"line\" data-line=\"6\">\n</span><span class=\"line\" data-line=\"7\">\n</span><span class=\"line\" data-line=\"8\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"9\">    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"n\">GIT_DIR</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"10\">    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"11\">\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\"><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"14\">    <span class=\"n\">oid</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha1</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"15\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"16\">        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"17\">    <span class=\"k\">return</span> <span class=\"n\">oid</span>\n</span><span class=\"line\" data-line=\"18\">\n</span><span class=\"line\" data-line=\"19\">\n</span><span class=\"line\" data-line=\"20\"><span class=\"k\">def</span> <span class=\"nf\">get_object</span> <span class=\"p\">(</span><span class=\"n\">oid</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"21\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"22\">        <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()</span>\n</span></code></pre></div>\n", "dc7dcf4b53649cb358fdad356302d786fc3a6beb": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\"><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"6\">\n</span><span class=\"line\" data-line=\"7\">\n</span><span class=\"line\" data-line=\"8\"><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"9\">    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"10\">    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"11\">\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\"><span class=\"k\">def</span> <span class=\"nf\">parse_args</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"14\">    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"15\">\n</span><span class=\"line\" data-line=\"16\">    <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_subparsers</span> <span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s1\">&#39;command&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"17\">    <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</span><span class=\"line\" data-line=\"18\">\n</span><span class=\"line\" data-line=\"19\">    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"20\">    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"21\">\n</span><span class=\"line\" data-line=\"22\">    <span class=\"n\">hash_object_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;hash-object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"23\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">hash_object</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"24\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"25\">\n</span><span class=\"line\" data-line=\"26\">    <span class=\"n\">cat_file_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;cat-file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"27\">    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">cat_file</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"28\">    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"29\">\n</span><span class=\"line\" data-line=\"30\">    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"31\">\n</span><span class=\"line\" data-line=\"32\">\n</span><span class=\"line\" data-line=\"33\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"34\">    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">init</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"35\">    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Initialized empty ugit repository in </span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"36\">\n</span><span class=\"line\" data-line=\"37\">\n</span><span class=\"line\" data-line=\"38\"><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"39\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"40\">        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()))</span>\n</span><span class=\"line\" data-line=\"41\">\n</span><span class=\"line\" data-line=\"42\">\n</span><span class=\"line\" data-line=\"43\"><span class=\"k\">def</span> <span class=\"nf\">cat_file</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"44\">    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"45\">    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n</span></code></pre></div>\n", "6e7bccef42fd7350e4c4c8f1f9ddced4f2b32ef6": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\">\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\"><span class=\"n\">GIT_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.ugit&#39;</span>\n</span><span class=\"line\" data-line=\"6\">\n</span><span class=\"line\" data-line=\"7\">\n</span><span class=\"line\" data-line=\"8\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"9\">    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"n\">GIT_DIR</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"10\">    <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"11\">\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\"><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">type_</span><span class=\"o\">=</span><span class=\"s1\">&#39;blob&#39;</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"14\">    <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">type_</span><span class=\"o\">.</span><span class=\"n\">encode</span> <span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"sa\">b</span><span class=\"s1\">&#39;</span><span class=\"se\">\\x00</span><span class=\"s1\">&#39;</span> <span class=\"o\">+</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"15\">    <span class=\"n\">oid</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">sha1</span> <span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"16\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">out</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"17\">        <span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"18\">    <span class=\"k\">return</span> <span class=\"n\">oid</span>\n</span><span class=\"line\" data-line=\"19\">\n</span><span class=\"line\" data-line=\"20\">\n</span><span class=\"line\" data-line=\"21\"><span class=\"k\">def</span> <span class=\"nf\">get_object</span> <span class=\"p\">(</span><span class=\"n\">oid</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"s1\">&#39;blob&#39;</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"22\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">/objects/</span><span class=\"si\">{</span><span class=\"n\">oid</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"23\">        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"24\">\n</span><span class=\"line\" data-line=\"25\">    <span class=\"n\">type_</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">partition</span> <span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">&#39;</span><span class=\"se\">\\x00</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"26\">    <span class=\"n\">type_</span> <span class=\"o\">=</span> <span class=\"n\">type_</span><span class=\"o\">.</span><span class=\"n\">decode</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"27\">\n</span><span class=\"line\" data-line=\"28\">    <span class=\"k\">if</span> <span class=\"n\">expected</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"29\">        <span class=\"k\">assert</span> <span class=\"n\">type_</span> <span class=\"o\">==</span> <span class=\"n\">expected</span><span class=\"p\">,</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;Expected </span><span class=\"si\">{</span><span class=\"n\">expected</span><span class=\"si\">}</span><span class=\"s1\">, got </span><span class=\"si\">{</span><span class=\"n\">type_</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span>\n</span><span class=\"line\" data-line=\"30\">    <span class=\"k\">return</span> <span class=\"n\">content</span>\n</span></code></pre></div>\n", "21b410259eda210a9e9923d06015b321592b134c": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span></code></pre></div>\n", "dd5c8f78e853384455b99491cbac7ceb6d10fd53": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\"><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">base</span>\n</span><span class=\"line\" data-line=\"6\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"7\">\n</span><span class=\"line\" data-line=\"8\">\n</span><span class=\"line\" data-line=\"9\"><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"10\">    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"11\">    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\">\n</span><span class=\"line\" data-line=\"14\"><span class=\"k\">def</span> <span class=\"nf\">parse_args</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"15\">    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"16\">\n</span><span class=\"line\" data-line=\"17\">    <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_subparsers</span> <span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s1\">&#39;command&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"18\">    <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</span><span class=\"line\" data-line=\"19\">\n</span><span class=\"line\" data-line=\"20\">    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"21\">    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"22\">\n</span><span class=\"line\" data-line=\"23\">    <span class=\"n\">hash_object_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;hash-object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"24\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">hash_object</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"25\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"26\">\n</span><span class=\"line\" data-line=\"27\">    <span class=\"n\">cat_file_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;cat-file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"28\">    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">cat_file</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"29\">    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"30\">\n</span><span class=\"line\" data-line=\"31\">    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"32\">\n</span><span class=\"line\" data-line=\"33\">\n</span><span class=\"line\" data-line=\"34\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"35\">    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">init</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"36\">    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Initialized empty ugit repository in </span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"37\">\n</span><span class=\"line\" data-line=\"38\">\n</span><span class=\"line\" data-line=\"39\"><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"40\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"41\">        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()))</span>\n</span><span class=\"line\" data-line=\"42\">\n</span><span class=\"line\" data-line=\"43\">\n</span><span class=\"line\" data-line=\"44\"><span class=\"k\">def</span> <span class=\"nf\">cat_file</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"45\">    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"46\">    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n</span></code></pre></div>\n", "fe6ced4988e2f06b3b8de39af61085cf1280c5d9": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"2\">\n</span><span class=\"line\" data-line=\"3\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\">\n</span><span class=\"line\" data-line=\"6\"><span class=\"k\">def</span> <span class=\"nf\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"7\">    <span class=\"k\">with</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">scandir</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"8\">        <span class=\"k\">for</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"9\">            <span class=\"n\">full</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">directory</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span>\n</span><span class=\"line\" data-line=\"10\">            <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_file</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"11\">                <span class=\"c1\"># TODO write the file to object store</span>\n</span><span class=\"line\" data-line=\"12\">                <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"13\">            <span class=\"k\">elif</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_dir</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"14\">                <span class=\"n\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"15\">\n</span><span class=\"line\" data-line=\"16\">    <span class=\"c1\"># TODO actually create the tree object</span>\n</span></code></pre></div>\n", "d08f2307367bf87ee8d7e76c628d54a61689b86f": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n</span><span class=\"line\" data-line=\"2\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"3\"><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">base</span>\n</span><span class=\"line\" data-line=\"6\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"7\">\n</span><span class=\"line\" data-line=\"8\">\n</span><span class=\"line\" data-line=\"9\"><span class=\"k\">def</span> <span class=\"nf\">main</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"10\">    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"11\">    <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">func</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\">\n</span><span class=\"line\" data-line=\"14\"><span class=\"k\">def</span> <span class=\"nf\">parse_args</span> <span class=\"p\">():</span>\n</span><span class=\"line\" data-line=\"15\">    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"16\">\n</span><span class=\"line\" data-line=\"17\">    <span class=\"n\">commands</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_subparsers</span> <span class=\"p\">(</span><span class=\"n\">dest</span><span class=\"o\">=</span><span class=\"s1\">&#39;command&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"18\">    <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">required</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</span><span class=\"line\" data-line=\"19\">\n</span><span class=\"line\" data-line=\"20\">    <span class=\"n\">init_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;init&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"21\">    <span class=\"n\">init_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">init</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"22\">\n</span><span class=\"line\" data-line=\"23\">    <span class=\"n\">hash_object_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;hash-object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"24\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">hash_object</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"25\">    <span class=\"n\">hash_object_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"26\">\n</span><span class=\"line\" data-line=\"27\">    <span class=\"n\">cat_file_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;cat-file&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"28\">    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">cat_file</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"29\">    <span class=\"n\">cat_file_parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span> <span class=\"p\">(</span><span class=\"s1\">&#39;object&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"30\">\n</span><span class=\"line\" data-line=\"31\">    <span class=\"n\">write_tree_parser</span> <span class=\"o\">=</span> <span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">add_parser</span> <span class=\"p\">(</span><span class=\"s1\">&#39;write-tree&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"32\">    <span class=\"n\">write_tree_parser</span><span class=\"o\">.</span><span class=\"n\">set_defaults</span> <span class=\"p\">(</span><span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">write_tree</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"33\">\n</span><span class=\"line\" data-line=\"34\">    <span class=\"k\">return</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"35\">\n</span><span class=\"line\" data-line=\"36\">\n</span><span class=\"line\" data-line=\"37\"><span class=\"k\">def</span> <span class=\"nf\">init</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"38\">    <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">init</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"39\">    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Initialized empty ugit repository in </span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">GIT_DIR</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"40\">\n</span><span class=\"line\" data-line=\"41\">\n</span><span class=\"line\" data-line=\"42\"><span class=\"k\">def</span> <span class=\"nf\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"43\">    <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"44\">        <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()))</span>\n</span><span class=\"line\" data-line=\"45\">\n</span><span class=\"line\" data-line=\"46\">\n</span><span class=\"line\" data-line=\"47\"><span class=\"k\">def</span> <span class=\"nf\">cat_file</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"48\">    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">flush</span> <span class=\"p\">()</span>\n</span><span class=\"line\" data-line=\"49\">    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"o\">.</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get_object</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">object</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n</span><span class=\"line\" data-line=\"50\">\n</span><span class=\"line\" data-line=\"51\">\n</span><span class=\"line\" data-line=\"52\"><span class=\"k\">def</span> <span class=\"nf\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"53\">    <span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">write_tree</span> <span class=\"p\">()</span>\n</span></code></pre></div>\n", "5a9108c0730948880addcb727983062d4bd3f98b": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"2\">\n</span><span class=\"line\" data-line=\"3\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\">\n</span><span class=\"line\" data-line=\"6\"><span class=\"k\">def</span> <span class=\"nf\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"7\">    <span class=\"k\">with</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">scandir</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"8\">        <span class=\"k\">for</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"9\">            <span class=\"n\">full</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">directory</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span>\n</span><span class=\"line\" data-line=\"10\">            <span class=\"k\">if</span> <span class=\"n\">is_ignored</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"11\">                <span class=\"k\">continue</span>\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\">            <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_file</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"14\">                <span class=\"c1\"># TODO write the file to object store</span>\n</span><span class=\"line\" data-line=\"15\">                <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"16\">            <span class=\"k\">elif</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_dir</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"17\">                <span class=\"n\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"18\">\n</span><span class=\"line\" data-line=\"19\">    <span class=\"c1\"># TODO actually create the tree object</span>\n</span><span class=\"line\" data-line=\"20\">\n</span><span class=\"line\" data-line=\"21\">\n</span><span class=\"line\" data-line=\"22\"><span class=\"k\">def</span> <span class=\"nf\">is_ignored</span> <span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"23\">    <span class=\"k\">return</span> <span class=\"s1\">&#39;.ugit&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span> <span class=\"p\">(</span><span class=\"s1\">&#39;/&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n", "25793d229b983c84083d10f2110b8c9a1a751003": "<div class=\"highlight\"><pre><span></span><code><span class=\"line\" data-line=\"1\"><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n</span><span class=\"line\" data-line=\"2\">\n</span><span class=\"line\" data-line=\"3\"><span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">data</span>\n</span><span class=\"line\" data-line=\"4\">\n</span><span class=\"line\" data-line=\"5\">\n</span><span class=\"line\" data-line=\"6\"><span class=\"k\">def</span> <span class=\"nf\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"7\">    <span class=\"k\">with</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">scandir</span> <span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"8\">        <span class=\"k\">for</span> <span class=\"n\">entry</span> <span class=\"ow\">in</span> <span class=\"n\">it</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"9\">            <span class=\"n\">full</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;</span><span class=\"si\">{</span><span class=\"n\">directory</span><span class=\"si\">}</span><span class=\"s1\">/</span><span class=\"si\">{</span><span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span>\n</span><span class=\"line\" data-line=\"10\">            <span class=\"k\">if</span> <span class=\"n\">is_ignored</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"11\">                <span class=\"k\">continue</span>\n</span><span class=\"line\" data-line=\"12\">\n</span><span class=\"line\" data-line=\"13\">            <span class=\"k\">if</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_file</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"14\">                <span class=\"k\">with</span> <span class=\"nb\">open</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">,</span> <span class=\"s1\">&#39;rb&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n</span><span class=\"line\" data-line=\"15\">                    <span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">hash_object</span> <span class=\"p\">(</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span> <span class=\"p\">()),</span> <span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"16\">            <span class=\"k\">elif</span> <span class=\"n\">entry</span><span class=\"o\">.</span><span class=\"n\">is_dir</span> <span class=\"p\">(</span><span class=\"n\">follow_symlinks</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"17\">                <span class=\"n\">write_tree</span> <span class=\"p\">(</span><span class=\"n\">full</span><span class=\"p\">)</span>\n</span><span class=\"line\" data-line=\"18\">\n</span><span class=\"line\" data-line=\"19\">    <span class=\"c1\"># TODO actually create the tree object</span>\n</span><span class=\"line\" data-line=\"20\">\n</span><span class=\"line\" data-line=\"21\">\n</span><span class=\"line\" data-line=\"22\"><span class=\"k\">def</span> <span class=\"nf\">is_ignored</span> <span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n</span><span class=\"line\" data-line=\"23\">    <span class=\"k\">return</span> <span class=\"s1\">&#39;.ugit&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span> <span class=\"p\">(</span><span class=\"s1\">&#39;/&#39;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n"}}